
<%= turbo_stream.replace "new_message" do %>
  <%= form_with model: [@conversation, Message.new], local: false, id: "new_message" do |form| %>
    <div class="flex space-x-4">
      <div class="flex-1">
        <%= form.text_field :content,
                            placeholder: "Type your message...",
                            class: "w-full px-4 py-3 border border-gray-300 rounded-full focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition duration-150",
                            autocomplete: "off" %>
      </div>

      <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-full transition duration-150 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
        </svg>
      </button>
    </div>
  <% end %>
<% end %>

<%= turbo_stream.append "messages" do %>
  <div data-controller="message"
       data-message-current-user-id-value="<%= current_user.id %>"
       data-user-id="<%= @message.user_id %>">
    <%= render "messages/message", message: @message, current_user: current_user %>
  </div>
<% end %>

<script>
    // Apply styling immediately after Turbo Stream appends the message
    document.addEventListener('turbo:before-stream-render', function(event) {
        const fragment = event.detail.newFragment;
        const messageElement = fragment.querySelector('[data-controller="message"]');

        if (messageElement) {
            const currentUserId = <%= current_user.id %>;
            const messageUserId = parseInt(messageElement.dataset.userId);
            const isCurrentUser = messageUserId === currentUserId;

            const messageDirection = messageElement.querySelector('[data-message-direction]');
            const messageBubble = messageElement.querySelector('[data-message-bubble]');
            const timestamp = messageElement.querySelector('[data-timestamp]');
            const senderName = messageElement.querySelector('[data-sender-name]');

            if (isCurrentUser) {
                messageDirection.classList.add('justify-end');
                messageBubble.classList.add('bg-blue-600', 'text-white');
                timestamp.classList.add('text-blue-100');
                if (senderName) senderName.style.display = 'none';
            } else {
                messageDirection.classList.add('justify-start');
                messageBubble.classList.add('bg-white', 'text-gray-800', 'border', 'border-gray-200');
                timestamp.classList.add('text-gray-400');
            }
        }
    });
</script>